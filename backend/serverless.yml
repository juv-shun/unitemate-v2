org: fukusumi
app: unitemate-v2
service: unitemate-v2

provider:
  name: aws
  region: ap-northeast-1
  runtime: python3.12
  stackName: ${sls:stage}-${self:service}-stack
  deploymentBucket:
    name: juv-shun.sls-deployment-store
    maxPreviousDeploymentArtifacts: 3
  logRetentionInDays: 7
  endpointType: REGIONAL
  iam:
    role:
      name: ${self:service}-role-${sls:stage}
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - !GetAtt UsersTable.Arn
            - !Join ["", [!GetAtt UsersTable.Arn, "/index/*"]]
            - !GetAtt MatchesTable.Arn

functions:
  hello:
    handler: src/handlers/hello.hello
    events:
      - httpApi:
          path: /
          method: get

plugins:
  - serverless-prune-plugin
  - serverless-python-requirements
  - serverless-offline
  - serverless-dynamodb-local

custom:
  tableName:
    users: ${self:service}-users-${sls:stage}
    matches: ${self:service}-matches-${sls:stage}
  prune:
    automatic: true
    number: 3
  pythonRequirements:
    dockerizePip: true
  serverless-offline:
    httpPort: 3000
    useChildProcesses: false
  dynamodb:
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    seed:
      domain:
        sources:
          - table: ${self:custom.tableName.users}
            sources: [./migrations/users-seed.json]
          - table: ${self:custom.tableName.matches}
            sources: [./migrations/matches-seed.json]

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName.users}
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: discord_id
            AttributeType: S
          - AttributeName: rate
            AttributeType: "N"
          - AttributeName: pk_constant
            AttributeType: S
          - AttributeName: inqueue_status
            AttributeType: S
        KeySchema:
          - AttributeName: pk_constant
            KeyType: HASH
          - AttributeName: user_id
            KeyType: RANGE
        LocalSecondaryIndexes:
          - IndexName: discord-id-index
            KeySchema:
              - AttributeName: pk_constant
                KeyType: HASH
              - AttributeName: discord_id
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: rate-index
            KeySchema:
              - AttributeName: pk_constant
                KeyType: HASH
              - AttributeName: rate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: inqueue-status-rate-index
            KeySchema:
              - AttributeName: pk_constant
                KeyType: HASH
              - AttributeName: inqueue_status
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    MatchesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName.matches}
        AttributeDefinitions:
          - AttributeName: match_id
            AttributeType: S
        KeySchema:
          - AttributeName: match_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
