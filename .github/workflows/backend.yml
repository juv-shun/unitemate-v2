name: Backend Deploy

on:
  push:
    branches: ['*']
    paths:
      - "backend/**"
  workflow_dispatch:

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv venv
          uv pip install .[dev]

      - name: Run ruff check
        run: |
          uv run ruff check .

      - name: Run ruff format check
        run: |
          uv run ruff format --check .

  deploy:
    if: github.ref == 'refs/heads/main'
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: lint-and-test
    defaults:
      run:
        working-directory: ./backend
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install Python dependencies
        run: |
          uv sync

      - name: Install Node.js dependencies
        run: |
          npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: github-actions-deploy
          aws-region: ap-northeast-1

      - name: Deploy to AWS
        env:
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
          SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
        run: |
          npx serverless deploy -s prd
